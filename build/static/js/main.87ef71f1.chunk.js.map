{"version":3,"sources":["components/NavBar/index.js","components/Container/index.js","components/Title/index.js","components/Row/index.js","components/Witcher/index.js","components/Col/index.js","App.js","index.js"],"names":["NavBar","className","id","src","Container","props","fluid","Title","message","score","topscore","Row","Witcher","onClick","imageClick","name","clicked","image","alt","key","Col","size","split","map","join","App","state","witchercard","topScore","style","backgroundImage","shuffleImages","console","log","setState","sort","Math","random","witcherImages","forEach","witcher","element","length","this","character","shuffle","Component","ReactDOM","render","document","getElementById"],"mappings":"i8BAYeA,MATf,WACE,OACE,yBAAKC,UAAU,sCAAsCC,GAAG,WACtD,yBAAKC,IAAI,4BAA4BF,UAAU,iBAC/C,wBAAIC,GAAG,YAAP,yB,MCKSE,MATf,SAAmBC,GACjB,OACE,uCACEJ,UAAS,mBAAcI,EAAMC,MAAQ,SAAW,GAAvC,kBACLD,K,MCSKE,MAbf,SAAeF,GACb,OACE,yBAAKJ,UAAU,YACb,yBAAKA,UAAU,eACb,2BAAII,EAAMG,SACV,0BAAMP,UAAU,kBAAhB,kBACkBI,EAAMI,MADxB,kBAC8CJ,EAAMK,a,MCG7CC,MATf,SAAaN,GACX,OACE,uCACEJ,UAAS,aAAQI,EAAMC,MAAQ,SAAW,GAAjC,wBACLD,K,MCQKO,MAZf,SAAiBP,GACf,OACE,yBACEQ,QAAS,kBAAMR,EAAMS,WAAWT,EAAMH,GAAIG,EAAMU,KAAMV,EAAMW,UAC5Df,UAAU,kCACVE,IAAKE,EAAMY,MACXC,IAAKb,EAAMU,KACXI,IAAKd,EAAMH,MCCFkB,MATf,SAAaf,GACX,IAAMgB,EAAOhB,EAAMgB,KAChBC,MAAM,KACNC,KAAI,SAAAF,GAAI,MAAI,OAASA,KACrBG,KAAK,KAER,OAAO,uCAAKvB,UAAWoB,GAAUhB,K,OC0FpBoB,G,iNAvFbC,MAAQ,CACNC,cACAnB,QAAS,6BACTC,MAAO,EACPmB,SAAU,G,EAGZC,MAAQ,CAAEC,gBAAgB,6C,EAE1BC,cAAgB,WACdC,QAAQC,IAAI,EAAKP,MAAMC,aACvB,EAAKO,SAAS,CACZP,YAAa,EAAKD,MAAMC,YAAYQ,MAAK,kBAAMC,KAAKC,SAAW,S,EAQnEvB,WAAa,SAACZ,EAAIa,EAAMC,GACtB,IAAMsB,EAAgB,EAAKZ,MAAMC,YAEjCW,EAAcC,SAAQ,SAAAC,GAChBA,EAAQtC,KAAOA,GAAMsC,EAAQxB,SAC/BsB,EAAcC,SAAQ,SAAAE,GACpBA,EAAQzB,SAAU,KAEpB,EAAKkB,SAAS,CACZ1B,QACE,uEACFC,MAAO,KAEA+B,EAAQtC,KAAOA,GAAOsC,EAAQxB,UACvCwB,EAAQxB,SAAU,EAClB,EAAKkB,SAAS,CACZ1B,QAAS,gBACTC,MAAO,EAAKiB,MAAMjB,MAAQ,EAC1BmB,SACE,EAAKF,MAAMjB,MAAQ,EAAI,EAAKiB,MAAME,SAC9B,EAAKF,MAAMjB,MAAQ,EACnB,EAAKiB,MAAME,eAKnB,EAAKF,MAAMjB,MAAQ,IAAM6B,EAAcI,QACzC,EAAKR,SAAS,CACZ1B,QAAS,uBACTC,MAAO,EACPmB,SAAU,IAId,EAAKG,iB,mFArCLY,KAAKZ,kB,+BAwCG,IAAD,OACP,OACE,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,KACE,kBAAC,EAAD,CACEvB,QAASmC,KAAKjB,MAAMlB,QACpBC,MAAOkC,KAAKjB,MAAMjB,MAClBC,SAAUiC,KAAKjB,MAAME,WAEvB,kBAAC,EAAD,KACGe,KAAKjB,MAAMC,YAAYJ,KAAI,SAAAqB,GAAS,OACnC,kBAAC,EAAD,CAAKvB,KAAK,MACR,kBAAC,EAAD,CACEnB,GAAI0C,EAAU1C,GACdiB,IAAKyB,EAAU1C,GACfa,KAAM6B,EAAU7B,KAChBE,MAAO2B,EAAU3B,MACjB4B,QAAS,EAAKd,cACdjB,WAAY,EAAKA,wB,GA7EjBgC,cCLlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.87ef71f1.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction NavBar() {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-dark\" id=\"navbarr\">\n      <img src=\"./imgs/witcherSchools.png\" className=\"header-photo\" />\n      <h1 id=\"thePhoto\">Witcher Memory Game</h1>\n    </nav>\n  );\n}\n\nexport default NavBar;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Container(props) {\n  return (\n    <div\n      className={`container${props.fluid ? \"-fluid\" : \"\"} theContainer`}\n      {...props}\n    />\n  );\n}\n\nexport default Container;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n  return (\n    <div className=\"titleDiv\">\n      <div className=\"text-center\">\n        <p>{props.message}</p>\n        <span className=\"theTitle score\">\n          Current Score: {props.score} || Top Score: {props.topscore}\n        </span>\n      </div>\n    </div>\n  );\n}\n\nexport default Title;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Row(props) {\n  return (\n    <div\n      className={`row${props.fluid ? \"-fluid\" : \"\"} text-center theRow`}\n      {...props}\n    />\n  );\n}\n\nexport default Row;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Witcher(props) {\n  return (\n    <img\n      onClick={() => props.imageClick(props.id, props.name, props.clicked)}\n      className=\"rounded imageBorder theWitchers\"\n      src={props.image}\n      alt={props.name}\n      key={props.id}\n    />\n  );\n}\n\nexport default Witcher;\n","import React from \"react\";\n\nfunction Col(props) {\n  const size = props.size\n    .split(\" \")\n    .map(size => \"col-\" + size)\n    .join(\" \");\n\n  return <div className={size} {...props} />;\n}\n\nexport default Col;\n","import React, { Component } from \"react\";\nimport NavBar from \"./components/NavBar\";\nimport Container from \"./components/Container\";\nimport Title from \"./components/Title\";\nimport Row from \"./components/Row\";\nimport Witcher from \"./components/Witcher\";\nimport Col from \"./components/Col\";\nimport witchercard from \"./witchercard.json\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nclass App extends Component {\n  state = {\n    witchercard,\n    message: \"Click a Character to Start\",\n    score: 0,\n    topScore: 0\n  };\n\n  style = { backgroundImage: `url(require(\"./imgs/witcherSchools.png\"))` };\n\n  shuffleImages = () => {\n    console.log(this.state.witchercard);\n    this.setState({\n      witchercard: this.state.witchercard.sort(() => Math.random() - 0.5)\n    });\n  };\n\n  componentDidMount() {\n    this.shuffleImages();\n  }\n\n  imageClick = (id, name, clicked) => {\n    const witcherImages = this.state.witchercard;\n\n    witcherImages.forEach(witcher => {\n      if (witcher.id === id && witcher.clicked) {\n        witcherImages.forEach(element => {\n          element.clicked = false;\n        });\n        this.setState({\n          message:\n            \"Sorry - You Already Clicked That Character. Better Luck Next Time...\",\n          score: 0\n        });\n      } else if (witcher.id === id && !witcher.clicked) {\n        witcher.clicked = true;\n        this.setState({\n          message: \"Great Choice!\",\n          score: this.state.score + 1,\n          topScore:\n            this.state.score + 1 > this.state.topScore\n              ? this.state.score + 1\n              : this.state.topScore\n        });\n      }\n    });\n\n    if (this.state.score + 1 === witcherImages.length) {\n      this.setState({\n        message: \"You won! Play again!\",\n        score: 0,\n        topScore: 0\n      });\n    }\n\n    this.shuffleImages();\n  };\n\n  render() {\n    return (\n      <div>\n        <NavBar />\n        <Container>\n          <Title\n            message={this.state.message}\n            score={this.state.score}\n            topscore={this.state.topScore}\n          ></Title>\n          <Row>\n            {this.state.witchercard.map(character => (\n              <Col size=\"sm\">\n                <Witcher\n                  id={character.id}\n                  key={character.id}\n                  name={character.name}\n                  image={character.image}\n                  shuffle={this.shuffleImages}\n                  imageClick={this.imageClick}\n                />\n              </Col>\n            ))}\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}